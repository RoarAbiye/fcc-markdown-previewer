{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","placeholder","lableStyle","App","props","handleChange","evt","setState","markup","target","value","state","__html","parse","this","id","className","style","onChange","dangerouslySetInnerHTML","getMarkdownText","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAKAA,SAAOC,WAAW,CAAEC,QAAQ,IAC5B,IAAMC,EACQ,6pBA2CRC,GAAU,GACf,gBAAiB,QACjB,eAAe,uBACf,eAAgB,QAChB,QAAW,OACX,eAAgB,OAChB,mBAAoB,yCACpB,MAAS,OACT,SAAY,kBARG,yBASH,UATG,cAUf,MAAM,KAVS,cAWf,eAAgB,OAXD,GA+CDC,E,kDAjCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,OAAQF,EAAIG,OAAOC,SAJlC,EAAKC,MAAQ,CAAEH,OAAQP,GAFR,E,mDASnB,WAEK,MAAO,CAAEW,OADOd,SAAOe,MAAMC,KAAKH,MAAMH,W,oBAI7C,WACI,OACF,gCACM,cAAC,IAAD,IAEJ,0BAASO,GAAG,UAAZ,UACI,sBAAKA,GAAG,eAAR,UACA,oBAAIC,UAAU,iBAAiBC,MAAOf,EAAtC,mBACI,0BAAUa,GAAG,SAASL,MAAOI,KAAKH,MAAMH,OAASU,SAAUJ,KAAKT,kBAEpE,sBAAKU,GAAG,gBAAR,UACA,oBAAIC,UAAU,kBAAkBC,MAAOf,EAAvC,+BACI,qBAAKa,GAAG,UAAUL,MAAOI,KAAKH,MAAMH,OAAQW,wBAAyBL,KAAKM,iC,GA3BxEC,aCnDHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8cc73b47.chunk.js","sourcesContent":["import ReactFCCtest from 'react-fcctest';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { marked } from 'marked';\n\nmarked.setOptions({ breaks: true});\nconst placeholder =\n{defaultState: `\n# Heading Size H1\n## Heading Size H2\n### Heading Size H3\n#### Heading Size H4\n##### Heading Size H5\n###### Heading Size h6\n\nThis is a Paragraph!\n\n**Bold Text** \n\n_italic text_\n\n\n> Block Quotes!\n\n- List Item\n- Another List Item\n  - Nested List Item\n\n1. Number list item\n2. Another item in Number list item\n\n- [x] DONE! Task list item\n- [ ] TODO! Task list item\n\nA link:\n[Check Out My Github Account](https://github.com/RoarAbiye)\n\nAn Image:\n![image](https://picsum.photos/200)\n\nIn line Code quote\n\\`print(inline code)\\`\n\nA block of code:\n\\`\\`\\`javascript\n   function addNums (num1, num2) {\n      console.log(num1+num2);\n   }\n\\`\\`\\`\n`};\nconst lableStyle = {\n 'border-radius': '.35em',\n 'border-style':'none none solid none',\n 'border-width': '.35em',\n 'margine': '.1em',\n 'border-color': '#ccc',\n 'background-image': 'linear-gradient(to right, #eee , #ddd)',\n 'color': '#999',\n 'position': '-webkit-sticky',\n 'position': 'sticky',\n 'top':'0',\n 'padding-left': '1em'\n}\nclass App extends Component { \n    constructor(props) {\n        super(props);\n        this.state = { markup: placeholder.defaultState};\n        }\n\n    handleChange = (evt) => {\n        this.setState({markup: evt.target.value})\n    };\n\n    getMarkdownText() {\n         var rawMarkup = marked.parse(this.state.markup);\n         return { __html: rawMarkup };\n    };\n\n    render () {\n        return (\n      <div>\n            <ReactFCCtest />\n            \n        <wrapper id=\"wrapper\">\n            <div id=\"editor-group\">\n            <h3 className=\"editor-heading\" style={lableStyle}>Input</h3>\n                <textarea id=\"editor\" value={this.state.markup}  onChange={this.handleChange} />\n            </div>\n            <div id=\"preview-group\">\n            <h3 className=\"preview-heading\" style={lableStyle}> Markdown Preview</h3>\n                <div id=\"preview\" value={this.state.markup} dangerouslySetInnerHTML={this.getMarkdownText()} />\n            </div>\n        </wrapper>\n      </div>\n  )};\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}